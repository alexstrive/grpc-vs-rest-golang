// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: stats.proto

package stats

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{0}
}

type CovidCaseStatEntryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*CovidCaseStatEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *CovidCaseStatEntryList) Reset() {
	*x = CovidCaseStatEntryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CovidCaseStatEntryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CovidCaseStatEntryList) ProtoMessage() {}

func (x *CovidCaseStatEntryList) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CovidCaseStatEntryList.ProtoReflect.Descriptor instead.
func (*CovidCaseStatEntryList) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{1}
}

func (x *CovidCaseStatEntryList) GetEntries() []*CovidCaseStatEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CovidCaseStatEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateRep                 string `protobuf:"bytes,1,opt,name=dateRep,proto3" json:"dateRep,omitempty"`
	Day                     uint32 `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`
	Month                   uint32 `protobuf:"varint,3,opt,name=month,proto3" json:"month,omitempty"`
	Year                    uint32 `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	Cases                   uint64 `protobuf:"varint,5,opt,name=cases,proto3" json:"cases,omitempty"`
	Deaths                  uint64 `protobuf:"varint,6,opt,name=deaths,proto3" json:"deaths,omitempty"`
	CountriesAndTerritories string `protobuf:"bytes,7,opt,name=countriesAndTerritories,proto3" json:"countriesAndTerritories,omitempty"`
	PopData2020             uint64 `protobuf:"varint,8,opt,name=popData2020,proto3" json:"popData2020,omitempty"`
	GeoId                   string `protobuf:"bytes,9,opt,name=geo_id,json=geoId,proto3" json:"geo_id,omitempty"`
	CountryterritoryCode    string `protobuf:"bytes,10,opt,name=countryterritoryCode,proto3" json:"countryterritoryCode,omitempty"`
	ContinentExp            string `protobuf:"bytes,11,opt,name=continentExp,proto3" json:"continentExp,omitempty"`
}

func (x *CovidCaseStatEntry) Reset() {
	*x = CovidCaseStatEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CovidCaseStatEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CovidCaseStatEntry) ProtoMessage() {}

func (x *CovidCaseStatEntry) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CovidCaseStatEntry.ProtoReflect.Descriptor instead.
func (*CovidCaseStatEntry) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{2}
}

func (x *CovidCaseStatEntry) GetDateRep() string {
	if x != nil {
		return x.DateRep
	}
	return ""
}

func (x *CovidCaseStatEntry) GetDay() uint32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *CovidCaseStatEntry) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *CovidCaseStatEntry) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *CovidCaseStatEntry) GetCases() uint64 {
	if x != nil {
		return x.Cases
	}
	return 0
}

func (x *CovidCaseStatEntry) GetDeaths() uint64 {
	if x != nil {
		return x.Deaths
	}
	return 0
}

func (x *CovidCaseStatEntry) GetCountriesAndTerritories() string {
	if x != nil {
		return x.CountriesAndTerritories
	}
	return ""
}

func (x *CovidCaseStatEntry) GetPopData2020() uint64 {
	if x != nil {
		return x.PopData2020
	}
	return 0
}

func (x *CovidCaseStatEntry) GetGeoId() string {
	if x != nil {
		return x.GeoId
	}
	return ""
}

func (x *CovidCaseStatEntry) GetCountryterritoryCode() string {
	if x != nil {
		return x.CountryterritoryCode
	}
	return ""
}

func (x *CovidCaseStatEntry) GetContinentExp() string {
	if x != nil {
		return x.ContinentExp
	}
	return ""
}

type StockList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stocks []*Stock `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
}

func (x *StockList) Reset() {
	*x = StockList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockList) ProtoMessage() {}

func (x *StockList) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockList.ProtoReflect.Descriptor instead.
func (*StockList) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{3}
}

func (x *StockList) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    string  `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Date     string  `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Open     float32 `protobuf:"fixed32,3,opt,name=open,proto3" json:"open,omitempty"`
	High     float32 `protobuf:"fixed32,4,opt,name=high,proto3" json:"high,omitempty"`
	Low      float32 `protobuf:"fixed32,5,opt,name=low,proto3" json:"low,omitempty"`
	Close    float32 `protobuf:"fixed32,6,opt,name=close,proto3" json:"close,omitempty"`
	AdjClose float32 `protobuf:"fixed32,7,opt,name=adjClose,proto3" json:"adjClose,omitempty"`
	Volume   float32 `protobuf:"fixed32,8,opt,name=volume,proto3" json:"volume,omitempty"`
	CloseUSD float32 `protobuf:"fixed32,9,opt,name=closeUSD,proto3" json:"closeUSD,omitempty"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{4}
}

func (x *Stock) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *Stock) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Stock) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Stock) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Stock) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Stock) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Stock) GetAdjClose() float32 {
	if x != nil {
		return x.AdjClose
	}
	return 0
}

func (x *Stock) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Stock) GetCloseUSD() float32 {
	if x != nil {
		return x.CloseUSD
	}
	return 0
}

var File_stats_proto protoreflect.FileDescriptor

var file_stats_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63,
	0x6f, 0x76, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x53, 0x0a, 0x16, 0x43, 0x6f, 0x76, 0x69, 0x64, 0x43, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x76,
	0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x76,
	0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x65, 0x61,
	0x74, 0x68, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x41, 0x6e, 0x64, 0x54, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x41,
	0x6e, 0x64, 0x54, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x32, 0x30, 0x32, 0x30, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x70, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x32, 0x30, 0x32, 0x30, 0x12,
	0x15, 0x0a, 0x06, 0x67, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x74, 0x65, 0x72,
	0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x22, 0x37,
	0x0a, 0x09, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x76, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x64, 0x6a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61,
	0x64, 0x6a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x55, 0x53, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x55, 0x53, 0x44, 0x32, 0xa1, 0x02, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x76, 0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x12, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x43, 0x6f, 0x76, 0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x43, 0x6f, 0x76, 0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x63, 0x6f, 0x76,
	0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23,
	0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x76,
	0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x2e, 0x63, 0x6f, 0x76, 0x69,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e,
	0x63, 0x6f, 0x76, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x73, 0x12, 0x12, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x16, 0x5a, 0x14, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x74, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stats_proto_rawDescOnce sync.Once
	file_stats_proto_rawDescData = file_stats_proto_rawDesc
)

func file_stats_proto_rawDescGZIP() []byte {
	file_stats_proto_rawDescOnce.Do(func() {
		file_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_stats_proto_rawDescData)
	})
	return file_stats_proto_rawDescData
}

var file_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_stats_proto_goTypes = []interface{}{
	(*Empty)(nil),                  // 0: covid_stats.Empty
	(*CovidCaseStatEntryList)(nil), // 1: covid_stats.CovidCaseStatEntryList
	(*CovidCaseStatEntry)(nil),     // 2: covid_stats.CovidCaseStatEntry
	(*StockList)(nil),              // 3: covid_stats.StockList
	(*Stock)(nil),                  // 4: covid_stats.Stock
}
var file_stats_proto_depIdxs = []int32{
	2, // 0: covid_stats.CovidCaseStatEntryList.entries:type_name -> covid_stats.CovidCaseStatEntry
	4, // 1: covid_stats.StockList.stocks:type_name -> covid_stats.Stock
	0, // 2: covid_stats.Stats.GetAllCovidCasesStream:input_type -> covid_stats.Empty
	0, // 3: covid_stats.Stats.GetAllCovidCases:input_type -> covid_stats.Empty
	0, // 4: covid_stats.Stats.GetAllStocksStream:input_type -> covid_stats.Empty
	0, // 5: covid_stats.Stats.GetAllStocks:input_type -> covid_stats.Empty
	2, // 6: covid_stats.Stats.GetAllCovidCasesStream:output_type -> covid_stats.CovidCaseStatEntry
	1, // 7: covid_stats.Stats.GetAllCovidCases:output_type -> covid_stats.CovidCaseStatEntryList
	4, // 8: covid_stats.Stats.GetAllStocksStream:output_type -> covid_stats.Stock
	3, // 9: covid_stats.Stats.GetAllStocks:output_type -> covid_stats.StockList
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_stats_proto_init() }
func file_stats_proto_init() {
	if File_stats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CovidCaseStatEntryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CovidCaseStatEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stats_proto_goTypes,
		DependencyIndexes: file_stats_proto_depIdxs,
		MessageInfos:      file_stats_proto_msgTypes,
	}.Build()
	File_stats_proto = out.File
	file_stats_proto_rawDesc = nil
	file_stats_proto_goTypes = nil
	file_stats_proto_depIdxs = nil
}
